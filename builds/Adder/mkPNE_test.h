/*
 * Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
 * 
 * On Tue Feb  4 15:26:50 IST 2020
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkPNE_test_h__
#define __mkPNE_test_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkPNE_test module */
class MOD_mkPNE_test : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUInt64> INST_adder1_fifo_input_reg;
  MOD_Fifo<tUInt32> INST_adder1_fifo_output_reg;
  MOD_Fifo<tUWide> INST_adder1_fifo_stage0_reg;
  MOD_Fifo<tUInt64> INST_adder1_fifo_stage1_reg;
  MOD_Fifo<tUInt32> INST_extracter1_fifo_input_reg;
  MOD_Fifo<tUInt32> INST_extracter1_fifo_output_reg;
  MOD_Fifo<tUInt32> INST_extracter1_fifo_stage0_reg;
  MOD_Fifo<tUInt32> INST_extracter1_fifo_stage1_reg;
  MOD_Fifo<tUInt32> INST_extracter1_fifo_stage2_reg;
  MOD_Fifo<tUInt32> INST_extracter2_fifo_input_reg;
  MOD_Fifo<tUInt32> INST_extracter2_fifo_output_reg;
  MOD_Fifo<tUInt32> INST_extracter2_fifo_stage0_reg;
  MOD_Fifo<tUInt32> INST_extracter2_fifo_stage1_reg;
  MOD_Fifo<tUInt32> INST_extracter2_fifo_stage2_reg;
  MOD_Fifo<tUInt32> INST_ffI;
  MOD_Fifo<tUInt32> INST_ffO;
  MOD_Fifo<tUInt32> INST_ffm;
  MOD_Fifo<tUInt32> INST_normalizer_fifo_input_reg;
  MOD_Fifo<tUInt32> INST_normalizer_fifo_output_reg;
  MOD_Fifo<tUInt64> INST_normalizer_fifo_stage0_reg;
  MOD_Fifo<tUInt64> INST_normalizer_fifo_stage1_reg;
  MOD_Fifo<tUInt32> INST_normalizer_fifo_stage2_reg;
 
 /* Constructor */
 public:
  MOD_mkPNE_test(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_compute_request_put;
  tUInt8 PORT_EN_compute_response_get;
  tUInt32 PORT_compute_request_put;
  tUInt8 PORT_RDY_compute_request_put;
  tUInt32 PORT_compute_response_get;
  tUInt8 PORT_RDY_compute_response_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_compute_response_get;
  tUInt8 DEF_WILL_FIRE_compute_request_put;
  tUInt8 DEF_WILL_FIRE_RL_rl_out;
  tUInt8 DEF_CAN_FIRE_RL_rl_out;
  tUInt8 DEF_WILL_FIRE_RL_rl_connect2;
  tUInt8 DEF_CAN_FIRE_RL_rl_connect2;
  tUInt8 DEF_WILL_FIRE_RL_rl_connect0;
  tUInt8 DEF_CAN_FIRE_RL_rl_connect0;
  tUInt8 DEF_WILL_FIRE_RL_rl_in;
  tUInt8 DEF_CAN_FIRE_RL_rl_in;
  tUInt8 DEF_WILL_FIRE_RL_normalizer_stage_3;
  tUInt8 DEF_CAN_FIRE_RL_normalizer_stage_3;
  tUInt8 DEF_WILL_FIRE_RL_normalizer_stage_2;
  tUInt8 DEF_CAN_FIRE_RL_normalizer_stage_2;
  tUInt8 DEF_WILL_FIRE_RL_normalizer_stage_1;
  tUInt8 DEF_CAN_FIRE_RL_normalizer_stage_1;
  tUInt8 DEF_WILL_FIRE_RL_normalizer_stage_0;
  tUInt8 DEF_CAN_FIRE_RL_normalizer_stage_0;
  tUInt8 DEF_WILL_FIRE_RL_adder1_stage_2;
  tUInt8 DEF_CAN_FIRE_RL_adder1_stage_2;
  tUInt8 DEF_WILL_FIRE_RL_adder1_stage_1;
  tUInt8 DEF_CAN_FIRE_RL_adder1_stage_1;
  tUInt8 DEF_WILL_FIRE_RL_adder1_stage_0;
  tUInt8 DEF_CAN_FIRE_RL_adder1_stage_0;
  tUInt8 DEF_WILL_FIRE_RL_extracter2_stage_3;
  tUInt8 DEF_CAN_FIRE_RL_extracter2_stage_3;
  tUInt8 DEF_WILL_FIRE_RL_extracter2_stage_2;
  tUInt8 DEF_CAN_FIRE_RL_extracter2_stage_2;
  tUInt8 DEF_WILL_FIRE_RL_extracter2_stage_1;
  tUInt8 DEF_CAN_FIRE_RL_extracter2_stage_1;
  tUInt8 DEF_WILL_FIRE_RL_extracter2_stage_0;
  tUInt8 DEF_CAN_FIRE_RL_extracter2_stage_0;
  tUInt8 DEF_WILL_FIRE_RL_extracter1_stage_3;
  tUInt8 DEF_CAN_FIRE_RL_extracter1_stage_3;
  tUInt8 DEF_WILL_FIRE_RL_extracter1_stage_2;
  tUInt8 DEF_CAN_FIRE_RL_extracter1_stage_2;
  tUInt8 DEF_WILL_FIRE_RL_extracter1_stage_1;
  tUInt8 DEF_CAN_FIRE_RL_extracter1_stage_1;
  tUInt8 DEF_WILL_FIRE_RL_extracter1_stage_0;
  tUInt8 DEF_CAN_FIRE_RL_extracter1_stage_0;
  tUInt8 DEF_CAN_FIRE_compute_response_get;
  tUInt8 DEF_CAN_FIRE_compute_request_put;
 
 /* Local definitions */
 private:
  tUWide DEF_adder1_fifo_stage0_reg_first____d468;
  tUWide DEF_adder1_fifo_input_reg_first__36_BITS_41_TO_40__ETC___d464;
 
 /* Rules */
 public:
  void RL_extracter1_stage_0();
  void RL_extracter1_stage_1();
  void RL_extracter1_stage_2();
  void RL_extracter1_stage_3();
  void RL_extracter2_stage_0();
  void RL_extracter2_stage_1();
  void RL_extracter2_stage_2();
  void RL_extracter2_stage_3();
  void RL_adder1_stage_0();
  void RL_adder1_stage_1();
  void RL_adder1_stage_2();
  void RL_normalizer_stage_0();
  void RL_normalizer_stage_1();
  void RL_normalizer_stage_2();
  void RL_normalizer_stage_3();
  void RL_rl_in();
  void RL_rl_connect0();
  void RL_rl_connect2();
  void RL_rl_out();
 
 /* Methods */
 public:
  void METH_compute_request_put(tUInt32 ARG_compute_request_put);
  tUInt8 METH_RDY_compute_request_put();
  tUInt32 METH_compute_response_get();
  tUInt8 METH_RDY_compute_response_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPNE_test &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkPNE_test &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkPNE_test &backing);
};

#endif /* ifndef __mkPNE_test_h__ */
