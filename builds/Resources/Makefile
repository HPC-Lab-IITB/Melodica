### Makefile for the ExtNorTest project
### Generated by Bluespec Workstation on Tue Apr 16 22:58:49 IST 2019

default: full_clean compile link simulate

#BSC_COMPILATION_FLAGS += \
#			 -D FPGA \
# Random or exhaustive testbench. Comment following line for exhaustive
#BSC_COMPILATION_FLAGS += \
#			 -D RANDOM \
#			 -D RANDOM_PRINT

OBJ = .o

TOPMOD = mkTestbench

CXXFAMILY=$(shell $(BLUESPECDIR)/bin/bsenv c++_family)


# Change me -- Where are the DISTRO objects
DISTRO = /home/riya/Documents/DDP/pnu/
SOFTPOSIT_OBJPATH = $(DISTRO)softPosit/SoftPosit/build/Linux-x86_64-GCC
BSC_CFLAGS = \
		-Xc -lm\
		-Xc -I$(DISTRO)softPosit/SoftPosit/source/include \
		-Xc++ -D_GLIBCXX_USE_CXX11_ABI=0

SOFTPOSIT_OBJS = \
$(SOFTPOSIT_OBJPATH)/s_addMagsP8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_subMagsP8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_mulAddP8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_mul$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_div$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_sqrt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_i32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_i64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_ui32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_to_ui64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_roundToInt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_mulAdd$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_eq$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_le$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p8_lt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire8_fdp_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire8_fdp_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui32_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui64_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i32_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i64_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_addMagsP16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_subMagsP16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_mulAddP16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_ui32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_ui64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_i32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_i64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_roundToInt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_mul$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_mulAdd$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_div$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_eq$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_le$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_lt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p16_sqrt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire16_fdp_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire16_fdp_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire_helper$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui32_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui64_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i32_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i64_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_addMagsP32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_subMagsP32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_mulAddP32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_ui32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_ui64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_i32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_i64$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_p8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_p16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_roundToInt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_mul$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_mulAdd$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_div$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_eq$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_le$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_lt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/p32_sqrt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire32_fdp_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/quire32_fdp_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui32_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui64_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i32_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i64_to_p32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_approxRecipSqrt_1Ks$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertDecToPosit8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertPosit8ToDec$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertDecToPosit16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertPosit16ToDec$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertQuire8ToPosit8$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertQuire16ToPosit16$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertQuire32ToPosit32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertDecToPosit32$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertPosit32ToDec$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_int$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_addMagsPX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_subMagsPX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/s_mulAddPX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_add$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_sub$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_mul$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_div$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_mulAdd$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_roundToInt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_sqrt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_eq$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_le$(OBJ) \
$(SOFTPOSIT_OBJPATH)/pX2_lt$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui32_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/ui64_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i32_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/i64_to_pX2$(OBJ) \
$(SOFTPOSIT_OBJPATH)/c_convertQuireX2ToPositX2$(OBJ) 
 

# From bluespec installation
BSIM_INCDIR=$(BLUESPECDIR)/Bluesim
BSIM_LIBDIR=$(BSIM_INCDIR)/$(CXXFAMILY)

# Change me - in case you change where compile-time files are created
BUILD_DIR=build
BUILD_BSIM_DIR=build
BSC_BUILDDIR=-simdir $(BUILD_BSIM_DIR) -bdir $(BUILD_DIR) -info-dir $(BUILD_DIR)

# For final C++ link with main.cxx driver for non-BlueTcl version
CPP_FLAGS += \
	-static \
	-D_GLIBCXX_USE_CXX11_ABI=0 \
        -DNEW_MODEL_MKFOO=new_MODEL_$(TOPMOD) \
        -DMODEL_MKFOO_H=\"model_$(TOPMOD).h\" \
	-I$(BUILD_BSIM_DIR) \
	-I$(BSIM_INCDIR) \
	-L$(BSIM_LIBDIR) \
	-L$(SOFTPOSIT_OBJPATH) \
	-O3 \
#	-g

.PHONY: compile
compile:
	@echo Compiling...
	mkdir -p VerilogCode $(BUILD_DIR) $(BUILD_BSIM_DIR)
	bsc -u -sim $(BSC_BUILDDIR) $(BSC_COMPILATION_FLAGS) -keep-fires -aggressive-conditions -p .:%/Prelude:%/Libraries:%/Libraries/BlueNoC -g $(TOPMOD)  Testbench.bsv 
	bsc -u -elab -verilog $(BSC_BUILDDIR) -vdir VerilogCode $(BSC_COMPILATION_FLAGS) -keep-fires -aggressive-conditions -p .:%/Prelude:%/Libraries:%/Libraries/BlueNoC -g $(TOPMOD)  Testbench.bsv
	@echo Compilation finished

.PHONY: link
link:
	@echo Linking...
	bsc -e $(TOPMOD) -sim -o ./out -simdir build -p .:%/Prelude:%/Libraries:%/Libraries/BlueNoC -bdir build -keep-fires -aggressive-conditions  $(BSC_CFLAGS) $(DISTRO)softPosit/Test_c.c $(OBJS_OTHERS) 
	@echo Linking finished

BLUESIM_MAIN_CXX = $(DISTRO)/BSV_Additional_Libs/C++/bluesim_main.cxx
.PHONY: link_d
link_d:
	@echo 'Linking for distributable Bluesim (without Bluetcl driver)'
	c++ $(CPP_FLAGS) \
		-o out_d \
		$(BLUESIM_MAIN_CXX) \
		$(BUILD_BSIM_DIR)/*.o \
		$(SOFTPOSIT_OBJS) \
		$(DISTRO)/softPosit/Test_c.o \
		-static-libgcc \
		-static-libstdc++ \
		-lbskernel -lbsprim \
		-lpthread
	@echo 'Linking finished for distributable Bluesim (without Bluetcl driver)'

.PHONY: simulate
simulate:
	@echo Simulation...
	./out 
	@echo Simulation finished

.PHONY: clean
clean:

.PHONY: full_clean
full_clean:
